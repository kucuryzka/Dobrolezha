int n = int.Parse(Console.ReadLine());
int m  = int.Parse(Console.ReadLine());

int[][] matrix = new int[n][];

for (int i = 0; i < n; i++)
{
    string[] s = Console.ReadLine().Split();
    matrix[i] = new int[s.Length];
    for (int j = 0; j < s.Length; j++)
    {
        matrix[i][j] = int.Parse(s[j]);
    }
}


for (int i = 1; i < n; i++)
{
    for (int j = 0; j < m; j++)
    {
        if (j == 0)
        {
            matrix[i][j] = matrix[i][j] + Math.Min(matrix[i - 1][0], matrix[i - 1][1]);
        }
        else if (j == m - 1)
        {
            matrix[i][j] = matrix[i][j] + Math.Min(matrix[i - 1][m - 1], matrix[i - 1][m - 2]);
        }
        else
        {
            matrix[i][j] = matrix[i][j] + Math.Min(matrix[i - 1][j - 1], Math.Min(matrix[i - 1][j], matrix[i - 1][j + 1]));
        }
    }
}

int ind = Array.IndexOf(matrix[n - 1], matrix[n - 1].Min());
List<int> list = new List<int>() { ind + 1 };
for (int i = n - 2; i >= 0; i--)
{
    int min = Math.Min(Math.Min(matrix[i][ind - 1], matrix[i][ind]), matrix[i][ind + 1]);
    ind = Array.IndexOf(matrix[i], min);
    list.Add(ind + 1);
}

list.Reverse();
foreach (int i in list) { Console.WriteLine(i); }


