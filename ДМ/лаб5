internal class Program
{
    private static void Main(string[] args)
    {

        // создание исходной матрицы и матрицы для работы
        int n = int.Parse(Console.ReadLine());
        double[,] matrix = new double[n, n];

        for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { if (i == j) { matrix[i, j] = 0; } else { matrix[i, j] = double.PositiveInfinity; } } }

        //
        matrix[0, 1] = 6; matrix[0, 2] = 6; matrix[0, 5] = 4;
        matrix[1, 3] = 87;
        matrix[2, 0] = 4; matrix[2, 4] = 54; matrix[2, 5] = 56;
        matrix[3, 1] = 5; matrix[3, 4] = 3;
        matrix[4, 0] = 58; matrix[4, 1] = 3;
        matrix[5, 0] = 6; matrix[5, 2] = 8; matrix[5, 3] = 6;
        //

        double[] prev = new double[6] {0, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity};
        double[] next = new double[6] {0, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity };
        double[] ex = new double[6] { 0, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity, double.PositiveInfinity };

        //создали список ребер
        List<double[]> edges = new List<double[]>();
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (matrix[i, j] != 0 && matrix[i, j] != double.PositiveInfinity)
                {
                    edges.Add(new double[] { i, j, matrix[i, j] });
                }
            }
        }
        //


        while(true)
        {
            foreach (double[] edge in edges)
            {
                if (prev[(int)edge[0]] + edge[2] < prev[(int)edge[1]])
                {
                    next[(int)edge[1]] = prev[(int)edge[0]] + edge[2];
                }

            }
            if (Enumerable.SequenceEqual(prev, next))
            { break; }

            Array.Copy(next, prev, n);
            

            for (int i = 0; i < n; i++)
            {
                Console.Write($"{prev[i]} ");
            }
            Console.WriteLine();
        }
        


    }
}
