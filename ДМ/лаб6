using System.Diagnostics.CodeAnalysis;

internal class Program
{
    void createMatrix(int n, ref int[,] matrix)
    {
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                matrix[i, j] = int.Parse(Console.ReadLine());
            }
        }
    }

    static void Print(int[,] arr)
    {
        for (int i = 0; i < 6; i++)
        {
            for (int j = 0; j < 6; j++)
            {
                Console.Write($"{arr[i, j]} ");
            }
            Console.WriteLine();
        }
    }



    private static void Main(string[] args)
    {
        // создание исходной матрицы и матрицы для работы
        int n = int.Parse(Console.ReadLine());
        double[,] matrix = new double[n, n];

        for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { if (i == j) { matrix[i, j] = 0; } else { matrix[i, j] = double.PositiveInfinity; } } }

        //
        matrix[0, 1] = 6; matrix[0, 2] = 6; matrix[0, 5] = 4;
        matrix[1, 3] = 87;
        matrix[2, 0] = 4; matrix[2, 4] = 54; matrix[2, 5] = 56;
        matrix[3, 1] = 5; matrix[3, 4] = 3;
        matrix[4, 0] = 58; matrix[4, 1] = 3;
        matrix[5, 0] = 6; matrix[5, 2] = 8; matrix[5, 3] = 6;
        //

        
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                for (int k = 0; k < n; k++)
                {
                    matrix[j, k] = Math.Min(matrix[j, k], matrix[j, i] + matrix[i, k]);
                }
            }
        }

        Console.WriteLine("1    2   3   4   5   6");
        for (int i = 0;i < n; i++)
        {
            Console.Write($"{i}     ");
            for (int j = 0;j < n; j++)
            {
                Console.Write(matrix[i, j] + "    ");
            }
            Console.Write("\n");
        }

        
    }
}
